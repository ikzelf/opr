dnl configure.in for opr
AC_INIT
AC_CONFIG_SRCDIR([src/opr.c])
AC_CANONICAL_TARGET
AC_PROG_CC
AC_CONFIG_AUX_DIR([libltdl/config])
AM_INIT_AUTOMAKE([opr], [1.1.12])
AC_CONFIG_HEADERS([src/config.h])
AC_HEADER_STDC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
LT_INIT
LT_CONFIG_LTDL_DIR([libltdl])
_LT_SET_OPTION([LT_INIT],[dlopen])
AC_DIAGNOSE([obsolete],[AC_LIBTOOL_DLOPEN: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])


LTDL_CONVENIENCE
LTDL_INIT
#AC_CONFIG_MACRO_DIR([libltdl/m4])

#AC_CONFIG_SUBDIRS(libltdl)
#AC_CONFIG_MACRO_DIR([libltdl/m4])
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

dnl we need a compiler that will eat ANSI C
if test "$ac_cv_prog_cc_stdc" = "no"; then
  AC_MSG_ERROR([must have a compiler that eats ANSI C])
fi

AC_CHECK_FUNCS(dlopen, , AC_CHECK_LIB(dl,dlopen, , [AC_MSG_ERROR([function dlopen is required])]))

AC_CHECK_HEADERS([stdio.h stdlib.h sys/stat.h termios.h pwd.h errno.h], , AC_MSG_ERROR(Required header file missing !))

AC_SEARCH_LIBS(nanosleep, rt posix4, AC_DEFINE(HAVE_NANOSLEEP, 1, [Define if you have nanosleep]))


AC_MSG_CHECKING([whether ORACLE_HOME is set])
if test "$ORACLE_HOME" = ""; then
  AC_MSG_ERROR(ORACLE_HOME environment variable must be set !)
fi
AC_MSG_RESULT([yes])

AC_MSG_CHECKING([whether oci.h is present])
found=""
for i in `find $ORACLE_HOME -name oci.h 2>/dev/null`
do
  found=$i
  CPPFLAGS="$CPPFLAGS -I"`dirname $i`
done

for i in `find $ORACLE_HOME -name ociextp.h`
do
  CPPFLAGS="$CPPFLAGS -I"`dirname $i`
done

for i in `find $ORACLE_HOME -name nzt.h`
do
  CPPFLAGS="$CPPFLAGS -I"`dirname $i`
done

if test "$found" = ""; then
  AC_MSG_ERROR([cannot find OCI headers in $ORACLE_HOME !])
fi
AC_MSG_RESULT([yes])

AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT
